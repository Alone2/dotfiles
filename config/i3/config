# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete # this file and re-run i3-config-wizard(1).
#

exec --no-startup-id nm-applet
exec --no-startup-id blueman-applet

exec --no-startup-id i3-msg 'workspace 1; exec eatmydata urxvt'

exec "setxkbmap -layout ch"

exec --no-startup-id /usr/bin/dunst

exec xinput set-prop 12 309 1
exec xinput set-prop 12 319 1

# i3 config file (v4)
#
# Please 3see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1 
set $sup Mod4
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.

#font pango:monospace 8
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 9
#font pango:Fira Code Regular 10
font pango:Hack 10
#font pango:DejaVu Sans Mono 10

# Before i3 v4.8, we used to recommend this one as the default:
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec eatmydata i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec rofi -show run -theme .config/rofi/Arc-Dark-Modified -font "hack 13"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# connect new monitor
bindsym $mod+m exec "xrandr --output HDMI1 --auto --right-of eDP1"
bindsym $mod+Shift+m exec "xrandr --output HDMI1 --same-as eDP1"
#byndsym $mod+n move workspace to output right

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow heighj 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    # status_command i3status
   status_command i3blocks 
   height 22
   colors {
        background #101010

        statusline #999999
        focused_workspace #40bf80 #40bf80 #191919 
        active_workspace #4066bf #4066bf #191919
        inactive_workspace #101010 #101010 #40bf80
        urgent_workspace #bf4d40 #bf4d40 #191919
    }

}


bindsym $mod+dollar exec eatmydata qutebrowser

gaps outer 5
gaps inner 20

smart_gaps on
smart_borders no_gaps

for_window [class="^.*"] border pixel 5
# Background
exec --no-startup-id nitrogen --restore
#exec --no-startup-id feh --bg-fill ~/Pictures/arch.png
exec --no-startup-id ~/.fehbg


# colors

#class			    border	     backgr.	text
client.focused               #141414 #40bf80 #40bf80
client.focused_inactive #101010 #191919 #999999
client.unfocused           #101010 #191919 #999999
client.urgent                 #cd989a #cd989a #2f362f

# no borders
#for_window [class="^.*"] border pixel 0

## Volume control

# Path to volume control, without trailing slash
set $volumepath /bin/i3-volume

# Command for the status line
#   ie: i3blocks, i3status
set $statuscmd i3blocks

# Signal used to update the status line
#   i3blocks uses SIGRTMIN+10 by default
#   i3status uses SIGUSR1 by default
set $statussig SIGRTMIN+10

# Amount to increase/decrease volume as a percentage
set $volumestep 2
set $volumestepop 5

# alsa-utils settings
#
# To configure a default card, see https://www.alsa-project.org/main/index.php/Asoundrc
#
# Card number to control.
#   If not specified, i3-volume will let `amixer` use a default.
#   List cards: aplay -l
#set $alsacard 1

# append "-c $alsacard" without quotes to override default card
# bindsym XF86AudioRaiseVolume exec $volumepath/volume -anp -i $volumestep -t $statuscmd -u $statussig
bindsym XF86AudioRaiseVolume exec i3-volume -anp -i $volumestep -t $statuscmd -u $statussig
bindsym XF86AudioLowerVolume exec i3-volume -anp -d $volumestep -t $statuscmd -u $statussig
bindsym XF86AudioMute        exec i3-volume -amn -t $statuscmd -u $statussig

# mod -p and mod -o
bindsym $mod+p exec i3-volume -anp -i $volumestepop -t $statuscmd -u $statussig
bindsym $mod+o exec i3-volume -anp -d $volumestepop -t $statuscmd -u $statussig


# Screen brightness
bindsym XF86MonBrightnessUp exec xbacklight -inc 10 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 10 # decrease screen brightness
# sup -p sup .o
bindsym $sup+p exec xbacklight -inc 10 # increase screen brightness
bindsym $sup+o exec xbacklight -dec 10 # decrease screen brightness

# Screenshot

# Multi-screen screenshots with scrot
bindsym --release Print exec scrot 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1 && notify-send -u low "screenshot" -t 700`' # All screens

# Lock screen
bindsym $sup+e exec betterlockscreen --lock

# Shutdown
#bindsym $sup+s exec urxvt -name shutdown --hold -e sh -c "poweroff"
for_window [instance="^shutdown$" class="^URxvt$"] floating enable, move absolute position center

# Keyboard Brightness
#echo 2 | sudo tee  /sys/class/leds/asus::kbd_backlight/brightness
